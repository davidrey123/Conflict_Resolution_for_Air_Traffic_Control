reset;
model Speed_Control.mod;

problem Action: delta,Dev,vrx,vry,z,q,bin11,bin12,
					bin311,bin312,bin321,bin322,bin331,bin332,bin341,bin342,					
					cvrx,cvry,turnlb,turnub,cq,Q;				
option solver cplexamp;
option cplex_options "mipdisplay=0 mipgap=1e-4 return_mipgap=1 threads=6 bestbound timelimit=300";

for {k in 5..5} {
	for {l in 1..1}{
		reset data;	
		data("..\RCP\RCP_"& k &"_" & l & ".dat");
		let A := 1..n;

		for{(i,j) in P}{
				if xr0[i,j]>=0 and yr0[i,j]>=0 then {
					let Mbin1[i,j] := -yr0[i,j]*lvrx[i,j]+xr0[i,j]*uvrx[i,j];
					if a[i,j]>=0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin332[i,j] := 2*a[i,j]*uvrx[i,j] - uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if a[i,j]>=0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin332[i,j] := 2*a[i,j]*uvrx[i,j] - lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));		
					if a[i,j]< 0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin332[i,j] := 2*a[i,j]*lvrx[i,j] - uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if a[i,j]< 0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin332[i,j] := 2*a[i,j]*lvrx[i,j] - lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if b[i,j]>=0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin331[i,j] := 2*b[i,j]*uvrx[i,j] - uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if b[i,j]>=0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin331[i,j] := 2*b[i,j]*uvrx[i,j] - lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));	
					if b[i,j]< 0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin331[i,j] := 2*b[i,j]*lvrx[i,j] - uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if b[i,j]< 0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin331[i,j] := 2*b[i,j]*lvrx[i,j] - lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
				}
				if xr0[i,j]>=0 and yr0[i,j]< 0 then {
					let Mbin1[i,j] := -yr0[i,j]*uvrx[i,j]+xr0[i,j]*uvrx[i,j];
					if a[i,j]>=0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin311[i,j] := 2*a[i,j]*uvrx[i,j] - uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if a[i,j]>=0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin311[i,j] := 2*a[i,j]*uvrx[i,j] - lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));				
					if a[i,j]< 0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin311[i,j] := 2*a[i,j]*lvrx[i,j] - uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if a[i,j]< 0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin311[i,j] := 2*a[i,j]*lvrx[i,j] - lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if -b[i,j]>=0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin312[i,j] := -2*b[i,j]*uvrx[i,j] + uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if -b[i,j]>=0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin312[i,j] := -2*b[i,j]*uvrx[i,j] + lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));	
					if -b[i,j]< 0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin312[i,j] := -2*b[i,j]*lvrx[i,j] + uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if -b[i,j]< 0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin312[i,j] := -2*b[i,j]*lvrx[i,j] + lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));		
				}
				if xr0[i,j]< 0 and yr0[i,j]>=0 then {
					let Mbin1[i,j] := -yr0[i,j]*lvrx[i,j]+xr0[i,j]*lvrx[i,j];
					if -a[i,j]>=0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin321[i,j] := -2*a[i,j]*uvrx[i,j] + uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if -a[i,j]>=0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin321[i,j] := -2*a[i,j]*uvrx[i,j] + lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));		
					if -a[i,j]< 0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin321[i,j] := -2*a[i,j]*lvrx[i,j] + uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if -a[i,j]< 0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin321[i,j] := -2*a[i,j]*lvrx[i,j] + lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if b[i,j]>=0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin322[i,j] := 2*b[i,j]*uvrx[i,j] - uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if b[i,j]>=0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin322[i,j] := 2*b[i,j]*uvrx[i,j] - lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));			
					if b[i,j]< 0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin322[i,j] := 2*b[i,j]*lvrx[i,j] - uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if b[i,j]< 0 and -(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin322[i,j] := 2*b[i,j]*lvrx[i,j] - lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));				
				}
				if xr0[i,j]< 0 and yr0[i,j]< 0 then {
					let Mbin1[i,j] := -yr0[i,j]*uvrx[i,j]+xr0[i,j]*lvrx[i,j];
					if -a[i,j]>=0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin342[i,j] := -2*a[i,j]*uvrx[i,j] + uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if -a[i,j]>=0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin342[i,j] := -2*a[i,j]*uvrx[i,j] + lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if -a[i,j]< 0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin342[i,j] := -2*a[i,j]*lvrx[i,j] + uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if -a[i,j]< 0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin342[i,j] := -2*a[i,j]*lvrx[i,j] + lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if -b[i,j]>=0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin341[i,j] := -2*b[i,j]*uvrx[i,j] + uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if -b[i,j]>=0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin341[i,j] := -2*b[i,j]*uvrx[i,j] + lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));		
					if -b[i,j]< 0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))>=0 then let Mbin341[i,j] := -2*b[i,j]*lvrx[i,j] + uvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));
					if -b[i,j]< 0 and (c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]))< 0 then let Mbin341[i,j] := -2*b[i,j]*lvrx[i,j] + lvry[i,j]*(c[i,j] - sqrt(c[i,j]**2 - 4*a[i,j]*b[i,j]));		
				}
			}

		for {j in 1..6} {

			problem Action;	
			solve Action;	

			let{i in A} qR[i] := q[i];
			printf "Alpha %e\n\n",alpha > out.txt;
			
			let qdev := sqrt(Q);
			
			printf "Instances \t Max. Dev. \t Controlled Aircraft \t Obj. Function\n" > out.txt;
			printf "%d \t\t %e \t %d \t\t\t %e \n\n",n,qdev,sum{i in A} delta[i],Dev> out.txt;
			
			printf "Aircraft optimized values\n" > out.txt;
			printf "Delta \t Speed Rate\n" > out.txt;
			for {ar in A}{
				printf "%d \t %e\n",delta[ar],qR[ar] > out.txt;
			}

			let alpha := 10*alpha;
			printf "-------------------------------------------------------------------------\n" > out.txt;
		}
		
	}	
}		